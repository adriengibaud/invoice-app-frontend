{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/Invoice/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoiceForm = ({\n  invoiceData\n}) => {\n  _s();\n\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n  useEffect(() => {\n    setTotal(items.map(e => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n\n  const submitForm = event => {\n    event.preventDefault();\n    console.log('je submit');\n  };\n\n  const modifyDate = date => {\n    const modifiedDate = moment(date).toDate();\n    const finalDate = moment(modifiedDate).format('YYYY-MM-DD');\n    return finalDate;\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: senderAddress.street,\n          onChange: e => setSenderAddress({ ...senderAddress,\n            street: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.city,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              city: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Post Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.postCode,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              postCode: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.country,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Client's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientName,\n          onChange: e => setClientName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Client's email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientEmail,\n          onChange: e => setClientEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientAddress.street,\n          onChange: e => setClientAddress({ ...clientAddress,\n            street: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SmallSizeEntry, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: clientAddress.city,\n            onChange: e => setClientAddress({ ...clientAddress,\n              city: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Post Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: clientAddress.postCode,\n            onChange: e => setClientAddress({ ...clientAddress,\n              postCode: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: clientAddress.coutry,\n            onChange: e => setClientAddress({ ...clientAddress,\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: /*#__PURE__*/_jsxDEV(SmallSizeEntry, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mediumContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Invoice Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"date\",\n            selected: createdAt,\n            dateFormat: \"yyyy/MM/dd\",\n            onChange: date => setCreatedAt(modifyDate(date))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoiceForm, \"yu69M2TM3O7nwa7Y8ud1OcrRd54=\");\n\n_c = InvoiceForm;\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    items: PropTypes.shape([{\n      name: PropTypes.string,\n      quantity: PropTypes.number,\n      price: PropTypes.number,\n      total: PropTypes.number\n    }]),\n    total: PropTypes.number\n  }).isRequired\n};\nexport default InvoiceForm;\nconst FormContainer = styled.form`\n  label {\n    display: block;\n    margin-bottom: 10px;\n  }\n  input {\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n`;\n_c2 = FormContainer;\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n_c3 = FormPart;\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n_c4 = FullSizeEntry;\nconst SmallSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  .container {\n    width: 30%;\n    input {\n      width: 100%;\n    }\n  }\n  .mediumContainer {\n    width: 45%;\n    input {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n    }\n  }\n`;\n_c5 = SmallSizeEntry;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"InvoiceForm\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"FormPart\");\n$RefreshReg$(_c4, \"FullSizeEntry\");\n$RefreshReg$(_c5, \"SmallSizeEntry\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/Invoice/InvoiceForm.jsx"],"names":["React","useState","useEffect","DatePicker","PropTypes","styled","moment","InvoiceForm","invoiceData","id","setId","description","setDescription","createdAt","setCreatedAt","paymentDue","setPaymentDue","clientName","setClientName","clientEmail","setClientEmail","clientAddress","setClientAddress","senderAddress","setSenderAddress","items","setItems","total","setTotal","map","e","reduce","a","b","submitForm","event","preventDefault","console","log","modifyDate","date","modifiedDate","toDate","finalDate","format","street","target","value","city","postCode","country","coutry","propTypes","shape","string","isRequired","name","quantity","number","price","FormContainer","form","FormPart","div","FullSizeEntry","SmallSizeEntry"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-unused-vars */\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport moment from 'moment';\n\nconst InvoiceForm = ({ invoiceData }) => {\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n\n  useEffect(() => {\n    setTotal(items.map((e) => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n    console.log('je submit');\n  };\n\n  const modifyDate = (date) => {\n    const modifiedDate = moment(date).toDate();\n    const finalDate = moment(modifiedDate).format('YYYY-MM-DD');\n    return finalDate;\n  };\n\n  return (\n    <FormContainer onSubmit={submitForm}>\n      <h1>New Invoice</h1>\n      <FormPart>\n        <h3>Bill From</h3>\n        <FullSizeEntry>\n          <label>Street Address</label>\n          <input\n            type=\"text\"\n            value={senderAddress.street}\n            onChange={(e) => setSenderAddress({ ...senderAddress, street: e.target.value })}\n          />\n        </FullSizeEntry>\n        <SmallSizeEntry>\n          <div className=\"container\">\n            <label>City</label>\n            <input\n              type=\"text\"\n              value={senderAddress.city}\n              onChange={(e) => setSenderAddress({ ...senderAddress, city: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Post Code</label>\n            <input\n              type=\"text\"\n              value={senderAddress.postCode}\n              onChange={(e) => setSenderAddress({ ...senderAddress, postCode: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Country</label>\n            <input\n              type=\"text\"\n              value={senderAddress.country}\n              onChange={(e) => setSenderAddress({ ...senderAddress, country: e.target.value })}\n            />\n          </div>\n        </SmallSizeEntry>\n      </FormPart>\n      <FormPart>\n        <h3>Bill to</h3>\n        <FullSizeEntry>\n          <label>Client's name</label>\n          <input type=\"text\" value={clientName} onChange={(e) => setClientName(e.target.value)} />\n        </FullSizeEntry>\n        <FullSizeEntry>\n          <label>Client's email</label>\n          <input type=\"text\" value={clientEmail} onChange={(e) => setClientEmail(e.target.value)} />\n        </FullSizeEntry>\n        <FullSizeEntry>\n          <label>Street Address</label>\n          <input\n            type=\"text\"\n            value={clientAddress.street}\n            onChange={(e) => setClientAddress({ ...clientAddress, street: e.target.value })}\n          />\n        </FullSizeEntry>\n        <SmallSizeEntry>\n          <div className=\"container\">\n            <label>City</label>\n            <input\n              type=\"text\"\n              value={clientAddress.city}\n              onChange={(e) => setClientAddress({ ...clientAddress, city: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Post Code</label>\n            <input\n              type=\"text\"\n              value={clientAddress.postCode}\n              onChange={(e) => setClientAddress({ ...clientAddress, postCode: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Country</label>\n            <input\n              type=\"text\"\n              value={clientAddress.coutry}\n              onChange={(e) => setClientAddress({ ...clientAddress, country: e.target.value })}\n            />\n          </div>\n        </SmallSizeEntry>\n      </FormPart>\n      <FormPart>\n        <SmallSizeEntry>\n          <div className=\"mediumContainer\">\n            <label>Invoice Date</label>\n            <DatePicker\n              className=\"date\"\n              selected={createdAt}\n              dateFormat=\"yyyy/MM/dd\"\n              onChange={(date) => setCreatedAt(modifyDate(date))}\n            />\n          </div>\n        </SmallSizeEntry>\n      </FormPart>\n    </FormContainer>\n  );\n};\n\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    items: PropTypes.shape([\n      {\n        name: PropTypes.string,\n        quantity: PropTypes.number,\n        price: PropTypes.number,\n        total: PropTypes.number,\n      },\n    ]),\n    total: PropTypes.number,\n  }).isRequired,\n};\n\nexport default InvoiceForm;\n\nconst FormContainer = styled.form`\n  label {\n    display: block;\n    margin-bottom: 10px;\n  }\n  input {\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n`;\n\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SmallSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  .container {\n    width: 30%;\n    input {\n      width: 100%;\n    }\n  }\n  .mediumContainer {\n    width: 45%;\n    input {\n      width: 100%;\n      display: flex;\n      flex-direction: row;\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}