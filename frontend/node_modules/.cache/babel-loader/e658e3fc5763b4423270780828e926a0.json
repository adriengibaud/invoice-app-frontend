{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport AddItemButton from 'components/buttons/AddItemButton';\nimport ItemList from './ItemList';\nimport InvoiceDateSelector from './InvoiceDateSelector';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoiceForm = ({\n  invoiceData\n}) => {\n  _s();\n\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n  const [select, setSelect] = useState('30day');\n  /* useEffect(() => {\n    setTotal(items.map((e) => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n  */\n\n  useEffect(() => {\n    if (select !== 'custom' && createdAt !== '') {\n      setPaymentDue(`je rajoute ${select} jours`);\n      console.log(paymentDue);\n    } else {\n      console.log('je ne fais rien lol');\n    }\n  }, [select, createdAt]);\n\n  const submitForm = event => {\n    event.preventDefault();\n  };\n\n  const addItem = () => {\n    const blankItem = {\n      id: uuidv4(),\n      name: '',\n      quantity: '',\n      price: '',\n      total: ''\n    };\n    return setItems([...items, blankItem]);\n  };\n\n  const modifyItem = (type, data, value) => {\n    const itemsCopy = [...items];\n    const index = itemsCopy.findIndex(r => r.id === data.id);\n    const item = { ...itemsCopy[index]\n    };\n    if (type === 'itemName') item.name = value;\n\n    if (type === 'qty' && value >= 0) {\n      item.quantity = value;\n      item.total = value * item.price;\n      console.log(value);\n      console.log(item.total);\n    }\n\n    if (type === 'price' && value >= 0) {\n      item.price = value;\n      item.total = value * item.quantity;\n    }\n\n    if (type === 'total') item.price = value;\n    itemsCopy[index] = item;\n    setItems(itemsCopy);\n  };\n\n  const deleteItem = item => setItems(items.filter(e => e.id !== item));\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: senderAddress.street,\n          onChange: e => setSenderAddress({ ...senderAddress,\n            street: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"three\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.city,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              city: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Post Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.postCode,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              postCode: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: senderAddress.country,\n            onChange: e => setSenderAddress({ ...senderAddress,\n              country: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill to\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Client's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientName,\n          onChange: e => setClientName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Client's email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientEmail,\n          onChange: e => setClientEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: clientAddress.street,\n          onChange: e => setClientAddress({ ...clientAddress,\n            street: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"three\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.city,\n          clickHandler: city => setClientAddress({ ...clientAddress,\n            city\n          }),\n          text: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.postCode,\n          clickHandler: postCode => setClientAddress({ ...clientAddress,\n            postCode\n          }),\n          text: \"Post Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.country,\n          clickHandler: country => setClientAddress({ ...clientAddress,\n            country\n          }),\n          text: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: select === 'custom' ? 'three' : 'two',\n        children: /*#__PURE__*/_jsxDEV(InvoiceDateSelector, {\n          createdAt: createdAt,\n          invoiceDateHandler: date => setCreatedAt(date),\n          handleSelectChange: term => setSelect(term),\n          select: select,\n          paymentDue: paymentDue,\n          paymentDueHandler: date => setPaymentDue(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Item List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), items.length > 0 && items.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(ItemList, {\n          position: i,\n          data: e,\n          handleDelete: item => deleteItem(item),\n          modifyItem: (type, data, value) => modifyItem(type, data, value)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(AddItemButton, {\n        margin: \"20px\",\n        clickHandler: () => addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoiceForm, \"WQ9MCmvK+tTif6vRxcTNdWzvBH0=\");\n\n_c = InvoiceForm;\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    items: PropTypes.shape([{\n      name: PropTypes.string,\n      quantity: PropTypes.number,\n      price: PropTypes.number,\n      total: PropTypes.number\n    }]),\n    total: PropTypes.number\n  }).isRequired\n};\nexport default InvoiceForm;\nconst FormContainer = styled.form`\n  label {\n    margin-bottom: 10px;\n  }\n  input,\n  select {\n    width: 100%;\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n  .label {\n    margin-bottom: 10px;\n  }\n`;\n_c2 = FormContainer;\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n_c3 = FormPart;\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: ${props => props.numberPerLine === 'one' ? 'column' : 'row'};\n  width: 100%;\n  justify-content: space-between;\n  .container {\n    width: ${({\n  numberPerLine\n}) => numberPerLine === 'three' && '30%' || numberPerLine === 'two' && '45%' || numberPerLine === 'one' && '100%'};\n    display: flex;\n    flex-direction: column;\n    input,\n    select {\n      width: 100%;\n    }\n  }\n`;\n_c4 = FullSizeEntry;\nconst ItemInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({\n  info\n}) => info === 'itemName' && 'flex-start' || info === 'qty' && 'center' || info === 'price' && 'flex-start' || info === 'total' && 'flex-end'};\n  width: ${({\n  label,\n  info\n}) => info === 'itemName' && '35%' || info === 'qty' && '10%' || info === 'price' && '17%' || info === 'total' && '17%' || info === 'bin' && '5%'};\n  img {\n    width: 80%;\n  }\n`;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"InvoiceForm\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"FormPart\");\n$RefreshReg$(_c4, \"FullSizeEntry\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/InvoiceForm.jsx"],"names":["React","useState","useEffect","v4","uuidv4","PropTypes","styled","AddItemButton","ItemList","InvoiceDateSelector","Input","InvoiceForm","invoiceData","id","setId","description","setDescription","createdAt","setCreatedAt","paymentDue","setPaymentDue","clientName","setClientName","clientEmail","setClientEmail","clientAddress","setClientAddress","senderAddress","setSenderAddress","items","setItems","total","setTotal","select","setSelect","console","log","submitForm","event","preventDefault","addItem","blankItem","name","quantity","price","modifyItem","type","data","value","itemsCopy","index","findIndex","r","item","deleteItem","filter","e","street","target","city","postCode","country","date","term","length","map","i","propTypes","shape","string","isRequired","number","FormContainer","form","FormPart","div","FullSizeEntry","props","numberPerLine","ItemInfo","info","label"],"mappings":";;;AAAA;;AACA;;AACA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,4CAAP;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACvC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcb,QAAQ,CAACW,WAAW,CAACC,EAAb,CAA5B;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAACW,WAAW,CAACG,WAAb,CAA9C;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACW,WAAW,CAACK,SAAb,CAA1C;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAACW,WAAW,CAACO,UAAb,CAA5C;AACA,QAAM,CAACE,UAAD,EAAaC,aAAb,IAA8BrB,QAAQ,CAACW,WAAW,CAACS,UAAb,CAA5C;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCvB,QAAQ,CAACW,WAAW,CAACW,WAAb,CAA9C;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAACW,WAAW,CAACa,aAAb,CAAlD;AACA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoC3B,QAAQ,CAACW,WAAW,CAACe,aAAb,CAAlD;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoB7B,QAAQ,CAACW,WAAW,CAACiB,KAAb,CAAlC;AACA,QAAM,CAACE,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAACW,WAAW,CAACmB,KAAb,CAAlC;AACA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,OAAD,CAApC;AAEA;AACF;AACA;AACA;;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI+B,MAAM,KAAK,QAAX,IAAuBhB,SAAS,KAAK,EAAzC,EAA6C;AAC3CG,MAAAA,aAAa,CAAE,cAAaa,MAAO,QAAtB,CAAb;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACD,KAHD,MAGO;AACLgB,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AACF,GAPQ,EAON,CAACH,MAAD,EAAShB,SAAT,CAPM,CAAT;;AASA,QAAMoB,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAG;AAChB5B,MAAAA,EAAE,EAAET,MAAM,EADM;AAEhBsC,MAAAA,IAAI,EAAE,EAFU;AAGhBC,MAAAA,QAAQ,EAAE,EAHM;AAIhBC,MAAAA,KAAK,EAAE,EAJS;AAKhBb,MAAAA,KAAK,EAAE;AALS,KAAlB;AAOA,WAAOD,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,SAAX,CAAD,CAAf;AACD,GATD;;AAWA,QAAMI,UAAU,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb,KAAuB;AACxC,UAAMC,SAAS,GAAG,CAAC,GAAGpB,KAAJ,CAAlB;AACA,UAAMqB,KAAK,GAAGD,SAAS,CAACE,SAAV,CAAqBC,CAAD,IAAOA,CAAC,CAACvC,EAAF,KAASkC,IAAI,CAAClC,EAAzC,CAAd;AACA,UAAMwC,IAAI,GAAG,EAAE,GAAGJ,SAAS,CAACC,KAAD;AAAd,KAAb;AACA,QAAIJ,IAAI,KAAK,UAAb,EAAyBO,IAAI,CAACX,IAAL,GAAYM,KAAZ;;AAEzB,QAAIF,IAAI,KAAK,KAAT,IAAkBE,KAAK,IAAI,CAA/B,EAAkC;AAChCK,MAAAA,IAAI,CAACV,QAAL,GAAgBK,KAAhB;AACAK,MAAAA,IAAI,CAACtB,KAAL,GAAaiB,KAAK,GAAGK,IAAI,CAACT,KAA1B;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACAb,MAAAA,OAAO,CAACC,GAAR,CAAYiB,IAAI,CAACtB,KAAjB;AACD;;AAED,QAAIe,IAAI,KAAK,OAAT,IAAoBE,KAAK,IAAI,CAAjC,EAAoC;AAClCK,MAAAA,IAAI,CAACT,KAAL,GAAaI,KAAb;AACAK,MAAAA,IAAI,CAACtB,KAAL,GAAaiB,KAAK,GAAGK,IAAI,CAACV,QAA1B;AACD;;AACD,QAAIG,IAAI,KAAK,OAAb,EAAsBO,IAAI,CAACT,KAAL,GAAaI,KAAb;AACtBC,IAAAA,SAAS,CAACC,KAAD,CAAT,GAAmBG,IAAnB;AACAvB,IAAAA,QAAQ,CAACmB,SAAD,CAAR;AACD,GApBD;;AAsBA,QAAMK,UAAU,GAAID,IAAD,IAAUvB,QAAQ,CAACD,KAAK,CAAC0B,MAAN,CAAcC,CAAD,IAAOA,CAAC,CAAC3C,EAAF,KAASwC,IAA7B,CAAD,CAArC;;AAEA,sBACE,QAAC,aAAD;AAAe,IAAA,QAAQ,EAAEhB,UAAzB;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,KAA7B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEV,aAAa,CAAC8B,MAFvB;AAGE,UAAA,QAAQ,EAAGD,CAAD,IAAO5B,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoB8B,YAAAA,MAAM,EAAED,CAAC,CAACE,MAAF,CAASV;AAArC,WAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,OAA7B;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAErB,aAAa,CAACgC,IAFvB;AAGE,YAAA,QAAQ,EAAGH,CAAD,IAAO5B,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBgC,cAAAA,IAAI,EAAEH,CAAC,CAACE,MAAF,CAASV;AAAnC,aAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAErB,aAAa,CAACiC,QAFvB;AAGE,YAAA,QAAQ,EAAGJ,CAAD,IAAO5B,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBiC,cAAAA,QAAQ,EAAEJ,CAAC,CAACE,MAAF,CAASV;AAAvC,aAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,IAAI,EAAC,MADP;AAEE,YAAA,KAAK,EAAErB,aAAa,CAACkC,OAFvB;AAGE,YAAA,QAAQ,EAAGL,CAAD,IAAO5B,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBkC,cAAAA,OAAO,EAAEL,CAAC,CAACE,MAAF,CAASV;AAAtC,aAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAuCE,QAAC,QAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,KAA7B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAE3B,UAA1B;AAAsC,UAAA,QAAQ,EAAGmC,CAAD,IAAOlC,aAAa,CAACkC,CAAC,CAACE,MAAF,CAASV,KAAV;AAApE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,KAA7B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEzB,WAA1B;AAAuC,UAAA,QAAQ,EAAGiC,CAAD,IAAOhC,cAAc,CAACgC,CAAC,CAACE,MAAF,CAASV,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,KAA7B;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEvB,aAAa,CAACgC,MAFvB;AAGE,UAAA,QAAQ,EAAGD,CAAD,IAAO9B,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBgC,YAAAA,MAAM,EAAED,CAAC,CAACE,MAAF,CAASV;AAArC,WAAD;AAHnC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAkBE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAC,OAA7B;AAAA,gCACE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEvB,aAAa,CAACkC,IADtB;AAEE,UAAA,YAAY,EAAGA,IAAD,IAAUjC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBkC,YAAAA;AAApB,WAAD,CAF1C;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,KAAD;AACE,UAAA,IAAI,EAAElC,aAAa,CAACmC,QADtB;AAEE,UAAA,YAAY,EAAGA,QAAD,IAAclC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBmC,YAAAA;AAApB,WAAD,CAF9C;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD;AACE,UAAA,IAAI,EAAEnC,aAAa,CAACoC,OADtB;AAEE,UAAA,YAAY,EAAGA,OAAD,IAAanC,gBAAgB,CAAC,EAAE,GAAGD,aAAL;AAAoBoC,YAAAA;AAApB,WAAD,CAF7C;AAGE,UAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF,eA2EE,QAAC,QAAD;AAAA,6BACE,QAAC,aAAD;AAAe,QAAA,aAAa,EAAE5B,MAAM,KAAK,QAAX,GAAsB,OAAtB,GAAgC,KAA9D;AAAA,+BACE,QAAC,mBAAD;AACE,UAAA,SAAS,EAAEhB,SADb;AAEE,UAAA,kBAAkB,EAAG6C,IAAD,IAAU5C,YAAY,CAAC4C,IAAD,CAF5C;AAGE,UAAA,kBAAkB,EAAGC,IAAD,IAAU7B,SAAS,CAAC6B,IAAD,CAHzC;AAIE,UAAA,MAAM,EAAE9B,MAJV;AAKE,UAAA,UAAU,EAAEd,UALd;AAME,UAAA,iBAAiB,EAAG2C,IAAD,IAAU1C,aAAa,CAAC0C,IAAD;AAN5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA3EF,eAuFE,QAAC,QAAD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGjC,KAAK,CAACmC,MAAN,GAAe,CAAf,IACCnC,KAAK,CAACoC,GAAN,CAAU,CAACT,CAAD,EAAIU,CAAJ,KAAU;AAClB,4BACE,QAAC,QAAD;AAEE,UAAA,QAAQ,EAAEA,CAFZ;AAGE,UAAA,IAAI,EAAEV,CAHR;AAIE,UAAA,YAAY,EAAGH,IAAD,IAAUC,UAAU,CAACD,IAAD,CAJpC;AAKE,UAAA,UAAU,EAAE,CAACP,IAAD,EAAOC,IAAP,EAAaC,KAAb,KAAuBH,UAAU,CAACC,IAAD,EAAOC,IAAP,EAAaC,KAAb;AAL/C,WACOQ,CAAC,CAAC3C,EADT;AAAA;AAAA;AAAA;AAAA,gBADF;AASD,OAVD,CAHJ,eAcE,QAAC,aAAD;AAAe,QAAA,MAAM,EAAC,MAAtB;AAA6B,QAAA,YAAY,EAAE,MAAM2B;AAAjD;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0GD,CA5KD;;GAAM7B,W;;KAAAA,W;AA8KNA,WAAW,CAACwD,SAAZ,GAAwB;AACtBvD,EAAAA,WAAW,EAAEP,SAAS,CAAC+D,KAAV,CAAgB;AAC3BvD,IAAAA,EAAE,EAAER,SAAS,CAACgE,MAAV,CAAiBC,UADM;AAE3BvD,IAAAA,WAAW,EAAEV,SAAS,CAACgE,MAAV,CAAiBC,UAFH;AAG3BrD,IAAAA,SAAS,EAAEZ,SAAS,CAACgE,MAAV,CAAiBC,UAHD;AAI3BnD,IAAAA,UAAU,EAAEd,SAAS,CAACgE,MAAV,CAAiBC,UAJF;AAK3BjD,IAAAA,UAAU,EAAEhB,SAAS,CAACgE,MAAV,CAAiBC,UALF;AAM3B/C,IAAAA,WAAW,EAAElB,SAAS,CAACgE,MANI;AAO3B5C,IAAAA,aAAa,EAAEpB,SAAS,CAAC+D,KAAV,CAAgB;AAC7BX,MAAAA,MAAM,EAAEpD,SAAS,CAACgE,MADW;AAE7BV,MAAAA,IAAI,EAAEtD,SAAS,CAACgE,MAFa;AAG7BT,MAAAA,QAAQ,EAAEvD,SAAS,CAACgE,MAHS;AAI7BR,MAAAA,OAAO,EAAExD,SAAS,CAACgE;AAJU,KAAhB,CAPY;AAa3B1C,IAAAA,aAAa,EAAEtB,SAAS,CAAC+D,KAAV,CAAgB;AAC7BX,MAAAA,MAAM,EAAEpD,SAAS,CAACgE,MADW;AAE7BV,MAAAA,IAAI,EAAEtD,SAAS,CAACgE,MAFa;AAG7BT,MAAAA,QAAQ,EAAEvD,SAAS,CAACgE,MAHS;AAI7BR,MAAAA,OAAO,EAAExD,SAAS,CAACgE;AAJU,KAAhB,CAbY;AAmB3BxC,IAAAA,KAAK,EAAExB,SAAS,CAAC+D,KAAV,CAAgB,CACrB;AACE1B,MAAAA,IAAI,EAAErC,SAAS,CAACgE,MADlB;AAEE1B,MAAAA,QAAQ,EAAEtC,SAAS,CAACkE,MAFtB;AAGE3B,MAAAA,KAAK,EAAEvC,SAAS,CAACkE,MAHnB;AAIExC,MAAAA,KAAK,EAAE1B,SAAS,CAACkE;AAJnB,KADqB,CAAhB,CAnBoB;AA2B3BxC,IAAAA,KAAK,EAAE1B,SAAS,CAACkE;AA3BU,GAAhB,EA4BVD;AA7BmB,CAAxB;AAgCA,eAAe3D,WAAf;AAEA,MAAM6D,aAAa,GAAGlE,MAAM,CAACmE,IAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMD,a;AAiBN,MAAME,QAAQ,GAAGpE,MAAM,CAACqE,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,Q;AASN,MAAME,aAAa,GAAGtE,MAAM,CAACqE,GAAI;AACjC;AACA;AACA,oBAAqBE,KAAD,IAAYA,KAAK,CAACC,aAAN,KAAwB,KAAxB,GAAgC,QAAhC,GAA2C,KAAO;AAClF;AACA;AACA;AACA,aAAa,CAAC;AAAEA,EAAAA;AAAF,CAAD,KACNA,aAAa,KAAK,OAAlB,IAA6B,KAA9B,IACCA,aAAa,KAAK,KAAlB,IAA2B,KAD5B,IAECA,aAAa,KAAK,KAAlB,IAA2B,MAAQ;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMF,a;AAoBN,MAAMG,QAAQ,GAAGzE,MAAM,CAACqE,GAAI;AAC5B;AACA;AACA,qBAAqB,CAAC;AAAEK,EAAAA;AAAF,CAAD,KAChBA,IAAI,KAAK,UAAT,IAAuB,YAAxB,IACCA,IAAI,KAAK,KAAT,IAAkB,QADnB,IAECA,IAAI,KAAK,OAAT,IAAoB,YAFrB,IAGCA,IAAI,KAAK,OAAT,IAAoB,UAAY;AACrC,WAAW,CAAC;AAAEC,EAAAA,KAAF;AAASD,EAAAA;AAAT,CAAD,KACNA,IAAI,KAAK,UAAT,IAAuB,KAAxB,IACCA,IAAI,KAAK,KAAT,IAAkB,KADnB,IAECA,IAAI,KAAK,OAAT,IAAoB,KAFrB,IAGCA,IAAI,KAAK,OAAT,IAAoB,KAHrB,IAICA,IAAI,KAAK,KAAT,IAAkB,IAAM;AAC7B;AACA;AACA;AACA,CAjBA","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-unused-vars */\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport AddItemButton from 'components/buttons/AddItemButton';\nimport ItemList from './ItemList';\nimport InvoiceDateSelector from './InvoiceDateSelector';\nimport Input from './Input';\n\nconst InvoiceForm = ({ invoiceData }) => {\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n  const [select, setSelect] = useState('30day');\n\n  /* useEffect(() => {\n    setTotal(items.map((e) => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n*/\n\n  useEffect(() => {\n    if (select !== 'custom' && createdAt !== '') {\n      setPaymentDue(`je rajoute ${select} jours`);\n      console.log(paymentDue);\n    } else {\n      console.log('je ne fais rien lol');\n    }\n  }, [select, createdAt]);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n  };\n\n  const addItem = () => {\n    const blankItem = {\n      id: uuidv4(),\n      name: '',\n      quantity: '',\n      price: '',\n      total: '',\n    };\n    return setItems([...items, blankItem]);\n  };\n\n  const modifyItem = (type, data, value) => {\n    const itemsCopy = [...items];\n    const index = itemsCopy.findIndex((r) => r.id === data.id);\n    const item = { ...itemsCopy[index] };\n    if (type === 'itemName') item.name = value;\n\n    if (type === 'qty' && value >= 0) {\n      item.quantity = value;\n      item.total = value * item.price;\n      console.log(value);\n      console.log(item.total);\n    }\n\n    if (type === 'price' && value >= 0) {\n      item.price = value;\n      item.total = value * item.quantity;\n    }\n    if (type === 'total') item.price = value;\n    itemsCopy[index] = item;\n    setItems(itemsCopy);\n  };\n\n  const deleteItem = (item) => setItems(items.filter((e) => e.id !== item));\n\n  return (\n    <FormContainer onSubmit={submitForm}>\n      <h1>New Invoice</h1>\n      <FormPart>\n        <h3>Bill From</h3>\n        <FullSizeEntry numberPerLine=\"one\">\n          <label>Street Address</label>\n          <input\n            type=\"text\"\n            value={senderAddress.street}\n            onChange={(e) => setSenderAddress({ ...senderAddress, street: e.target.value })}\n          />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"three\">\n          <div className=\"container\">\n            <label>City</label>\n            <input\n              type=\"text\"\n              value={senderAddress.city}\n              onChange={(e) => setSenderAddress({ ...senderAddress, city: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Post Code</label>\n            <input\n              type=\"text\"\n              value={senderAddress.postCode}\n              onChange={(e) => setSenderAddress({ ...senderAddress, postCode: e.target.value })}\n            />\n          </div>\n          <div className=\"container\">\n            <label>Country</label>\n            <input\n              type=\"text\"\n              value={senderAddress.country}\n              onChange={(e) => setSenderAddress({ ...senderAddress, country: e.target.value })}\n            />\n          </div>\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <h3>Bill to</h3>\n        <FullSizeEntry numberPerLine=\"one\">\n          <label>Client's name</label>\n          <input type=\"text\" value={clientName} onChange={(e) => setClientName(e.target.value)} />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"one\">\n          <label>Client's email</label>\n          <input type=\"text\" value={clientEmail} onChange={(e) => setClientEmail(e.target.value)} />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"one\">\n          <label>Street Address</label>\n          <input\n            type=\"text\"\n            value={clientAddress.street}\n            onChange={(e) => setClientAddress({ ...clientAddress, street: e.target.value })}\n          />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"three\">\n          <Input\n            data={clientAddress.city}\n            clickHandler={(city) => setClientAddress({ ...clientAddress, city })}\n            text=\"City\"\n          />\n          <Input\n            data={clientAddress.postCode}\n            clickHandler={(postCode) => setClientAddress({ ...clientAddress, postCode })}\n            text=\"Post Code\"\n          />\n          <Input\n            data={clientAddress.country}\n            clickHandler={(country) => setClientAddress({ ...clientAddress, country })}\n            text=\"Country\"\n          />\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <FullSizeEntry numberPerLine={select === 'custom' ? 'three' : 'two'}>\n          <InvoiceDateSelector\n            createdAt={createdAt}\n            invoiceDateHandler={(date) => setCreatedAt(date)}\n            handleSelectChange={(term) => setSelect(term)}\n            select={select}\n            paymentDue={paymentDue}\n            paymentDueHandler={(date) => setPaymentDue(date)}\n          />\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <h3>Item List</h3>\n        {items.length > 0 &&\n          items.map((e, i) => {\n            return (\n              <ItemList\n                key={e.id}\n                position={i}\n                data={e}\n                handleDelete={(item) => deleteItem(item)}\n                modifyItem={(type, data, value) => modifyItem(type, data, value)}\n              />\n            );\n          })}\n        <AddItemButton margin=\"20px\" clickHandler={() => addItem} />\n      </FormPart>\n    </FormContainer>\n  );\n};\n\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    items: PropTypes.shape([\n      {\n        name: PropTypes.string,\n        quantity: PropTypes.number,\n        price: PropTypes.number,\n        total: PropTypes.number,\n      },\n    ]),\n    total: PropTypes.number,\n  }).isRequired,\n};\n\nexport default InvoiceForm;\n\nconst FormContainer = styled.form`\n  label {\n    margin-bottom: 10px;\n  }\n  input,\n  select {\n    width: 100%;\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n  .label {\n    margin-bottom: 10px;\n  }\n`;\n\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: ${(props) => (props.numberPerLine === 'one' ? 'column' : 'row')};\n  width: 100%;\n  justify-content: space-between;\n  .container {\n    width: ${({ numberPerLine }) =>\n      (numberPerLine === 'three' && '30%') ||\n      (numberPerLine === 'two' && '45%') ||\n      (numberPerLine === 'one' && '100%')};\n    display: flex;\n    flex-direction: column;\n    input,\n    select {\n      width: 100%;\n    }\n  }\n`;\n\nconst ItemInfo = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ info }) =>\n    (info === 'itemName' && 'flex-start') ||\n    (info === 'qty' && 'center') ||\n    (info === 'price' && 'flex-start') ||\n    (info === 'total' && 'flex-end')};\n  width: ${({ label, info }) =>\n    (info === 'itemName' && '35%') ||\n    (info === 'qty' && '10%') ||\n    (info === 'price' && '17%') ||\n    (info === 'total' && '17%') ||\n    (info === 'bin' && '5%')};\n  img {\n    width: 80%;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}