{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/no-unescaped-entities */\n\n/* eslint-disable jsx-a11y/label-has-associated-control */\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { addDaysToDate } from 'utils/dateManipulation';\nimport AddItemButton from 'components/buttons/AddItemButton';\nimport BackButton from 'components/buttons/BackButton';\nimport SaveInvoiceButton from 'components/buttons/SaveInvoiceButton';\nimport ItemList from './ItemList';\nimport InvoiceDateSelector from './InvoiceDateSelector';\nimport Input from './Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoiceForm = ({\n  invoiceData,\n  closeCreatingInvoice,\n  savingInvoice\n}) => {\n  _s();\n\n  const [id, setId] = useState(invoiceData.id === '' ? uuidv4 : invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt.length > 0 ? new Date(invoiceData.createdAt) : '');\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n  const [select, setSelect] = useState(30);\n  /* useEffect(() => {\n    setTotal(items.map((e) => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n  */\n\n  useEffect(() => {\n    if (select !== 'custom' && createdAt !== '') {\n      setPaymentDue(addDaysToDate(createdAt, select));\n      const stringDate = paymentDue.toString();\n      console.log(new Date(stringDate));\n      console.log(stringDate);\n    } else {\n      console.log('je ne fais rien lol');\n    }\n  }, [select, createdAt]);\n\n  const submitForm = event => {\n    event.preventDefault();\n  };\n\n  const invoiceFinalData = {\n    id,\n    createdAt: createdAt.toString(),\n    paymentDue: paymentDue.toString(),\n    clientName,\n    clientEmail,\n    senderAddress,\n    clientAddress,\n    items,\n    total,\n    status: 'pending'\n  };\n\n  const addItem = () => {\n    const blankItem = {\n      id: uuidv4(),\n      name: '',\n      quantity: '',\n      price: '',\n      total: ''\n    };\n    return setItems([...items, blankItem]);\n  };\n\n  const modifyItem = (type, data, value) => {\n    const itemsCopy = [...items];\n    const index = itemsCopy.findIndex(r => r.id === data.id);\n    const item = { ...itemsCopy[index]\n    };\n    if (type === 'itemName') item.name = value;\n\n    if (type === 'qty' && value >= 0) {\n      item.quantity = value;\n      item.total = value * item.price;\n    }\n\n    if (type === 'price' && value >= 0) {\n      item.price = value;\n      item.total = value * item.quantity;\n    }\n\n    if (type === 'total') item.price = value;\n    itemsCopy[index] = item;\n    setItems(itemsCopy);\n  };\n\n  const deleteItem = item => setItems(items.filter(e => e.id !== item));\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    onSubmit: submitForm,\n    children: [/*#__PURE__*/_jsxDEV(BackButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(BackButton, {\n        clickHandler: () => closeCreatingInvoice()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill From\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          text: \"Street Address\",\n          data: senderAddress.street,\n          dataChangeHandler: street => setSenderAddress({ ...senderAddress,\n            street\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"three\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          text: \"City\",\n          data: senderAddress.city,\n          dataChangeHandler: city => setSenderAddress({ ...senderAddress,\n            city\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          text: \"Post Code\",\n          data: senderAddress.postCode,\n          dataChangeHandler: postCode => setSenderAddress({ ...senderAddress,\n            postCode\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          text: \"Country\",\n          data: senderAddress.country,\n          dataChangeHandler: country => setSenderAddress({ ...senderAddress,\n            country\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bill To\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"one\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          data: clientName,\n          dataChangeHandler: name => setClientName(name),\n          text: \"Client's Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientEmail,\n          dataChangeHandler: email => setClientEmail,\n          text: \"Client's Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.street,\n          dataChangeHandler: street => setClientAddress({ ...clientAddress,\n            street\n          }),\n          text: \"Street Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: \"three\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.city,\n          dataChangeHandler: city => setClientAddress({ ...clientAddress,\n            city\n          }),\n          text: \"City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.postCode,\n          dataChangeHandler: postCode => setClientAddress({ ...clientAddress,\n            postCode\n          }),\n          text: \"Post Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          data: clientAddress.country,\n          dataChangeHandler: country => setClientAddress({ ...clientAddress,\n            country\n          }),\n          text: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: /*#__PURE__*/_jsxDEV(FullSizeEntry, {\n        numberPerLine: select === 'custom' ? 'three' : 'two',\n        date: true,\n        children: /*#__PURE__*/_jsxDEV(InvoiceDateSelector, {\n          createdAt: createdAt,\n          invoiceDateHandler: date => setCreatedAt(date),\n          handleSelectChange: term => setSelect(term),\n          select: select,\n          paymentDue: paymentDue,\n          paymentDueHandler: date => setPaymentDue(date)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormPart, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Item List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), items.length > 0 && items.map((e, i) => {\n        return /*#__PURE__*/_jsxDEV(ItemList, {\n          position: i,\n          data: e,\n          handleDelete: item => deleteItem(item),\n          modifyItem: (type, data, value) => modifyItem(type, data, value)\n        }, e.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(AddItemButton, {\n        margin: \"20px\",\n        clickHandler: () => addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: /*#__PURE__*/_jsxDEV(SaveInvoiceButton, {\n        text: \"save changes\",\n        clickHandler: () => savingInvoice(invoiceFinalData)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InvoiceForm, \"DRSkwOOSRUPyBoOmCWe16ZFN55k=\");\n\n_c = InvoiceForm;\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    items: PropTypes.shape([{\n      name: PropTypes.string,\n      quantity: PropTypes.number,\n      price: PropTypes.number,\n      total: PropTypes.number\n    }]),\n    total: PropTypes.number\n  }).isRequired,\n  closeCreatingInvoice: PropTypes.func.isRequired,\n  savingInvoice: PropTypes.func.isRequired\n};\nexport default InvoiceForm;\nconst FormContainer = styled.form`\n  label {\n    margin-bottom: 10px;\n  }\n  input,\n  select {\n    width: 100%;\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n  .label {\n    margin-bottom: 10px;\n  }\n`;\n_c2 = FormContainer;\nconst BackButtonContainer = styled.div`\n  margin-bottom: 30px;\n`;\n_c3 = BackButtonContainer;\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n_c4 = FormPart;\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: ${props => props.numberPerLine === 'one' ? 'column' : 'row'};\n  width: 100%;\n  justify-content: space-between;\n  @media screen and (max-width: 600px) {\n    flex-direction: ${({\n  twoOnMobile\n}) => twoOnMobile ? 'row' : 'row'};\n    flex-wrap: wrap;\n    margin-top: 0;\n  }\n\n  .container {\n    width: ${({\n  numberPerLine\n}) => numberPerLine === 'three' && '30%' || numberPerLine === 'two' && '45%' || numberPerLine === 'one' && '100%'};\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    @media screen and (max-width: 600px) {\n      width: ${({\n  date\n}) => date ? '45%' : '100%'};\n    }\n  }\n`;\n_c5 = FullSizeEntry;\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`;\n_c6 = ButtonContainer;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"InvoiceForm\");\n$RefreshReg$(_c2, \"FormContainer\");\n$RefreshReg$(_c3, \"BackButtonContainer\");\n$RefreshReg$(_c4, \"FormPart\");\n$RefreshReg$(_c5, \"FullSizeEntry\");\n$RefreshReg$(_c6, \"ButtonContainer\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/InvoiceForm.jsx"],"names":["React","useState","useEffect","v4","uuidv4","PropTypes","styled","addDaysToDate","AddItemButton","BackButton","SaveInvoiceButton","ItemList","InvoiceDateSelector","Input","InvoiceForm","invoiceData","closeCreatingInvoice","savingInvoice","id","setId","description","setDescription","createdAt","setCreatedAt","length","Date","paymentDue","setPaymentDue","clientName","setClientName","clientEmail","setClientEmail","clientAddress","setClientAddress","senderAddress","setSenderAddress","items","setItems","total","setTotal","select","setSelect","stringDate","toString","console","log","submitForm","event","preventDefault","invoiceFinalData","status","addItem","blankItem","name","quantity","price","modifyItem","type","data","value","itemsCopy","index","findIndex","r","item","deleteItem","filter","e","street","city","postCode","country","email","date","term","map","i","propTypes","shape","string","isRequired","number","func","FormContainer","form","BackButtonContainer","div","FormPart","FullSizeEntry","props","numberPerLine","twoOnMobile","ButtonContainer"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unescaped-entities */\n/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable no-unused-vars */\n/* eslint-disable arrow-body-style */\nimport React, { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { addDaysToDate } from 'utils/dateManipulation';\nimport AddItemButton from 'components/buttons/AddItemButton';\nimport BackButton from 'components/buttons/BackButton';\nimport SaveInvoiceButton from 'components/buttons/SaveInvoiceButton';\nimport ItemList from './ItemList';\nimport InvoiceDateSelector from './InvoiceDateSelector';\nimport Input from './Input';\n\nconst InvoiceForm = ({ invoiceData, closeCreatingInvoice, savingInvoice }) => {\n  const [id, setId] = useState(invoiceData.id === '' ? uuidv4 : invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(\n    invoiceData.createdAt.length > 0 ? new Date(invoiceData.createdAt) : ''\n  );\n  const [paymentDue, setPaymentDue] = useState(invoiceData.paymentDue);\n  const [clientName, setClientName] = useState(invoiceData.clientName);\n  const [clientEmail, setClientEmail] = useState(invoiceData.clientEmail);\n  const [clientAddress, setClientAddress] = useState(invoiceData.clientAddress);\n  const [senderAddress, setSenderAddress] = useState(invoiceData.senderAddress);\n  const [items, setItems] = useState(invoiceData.items);\n  const [total, setTotal] = useState(invoiceData.total);\n  const [select, setSelect] = useState(30);\n\n  /* useEffect(() => {\n    setTotal(items.map((e) => e.total).reduce((a, b) => a + b, 0));\n  }, [items]);\n*/\n\n  useEffect(() => {\n    if (select !== 'custom' && createdAt !== '') {\n      setPaymentDue(addDaysToDate(createdAt, select));\n      const stringDate = paymentDue.toString();\n      console.log(new Date(stringDate));\n      console.log(stringDate);\n    } else {\n      console.log('je ne fais rien lol');\n    }\n  }, [select, createdAt]);\n\n  const submitForm = (event) => {\n    event.preventDefault();\n  };\n\n  const invoiceFinalData = {\n    id,\n    createdAt: createdAt.toString(),\n    paymentDue: paymentDue.toString(),\n    clientName,\n    clientEmail,\n    senderAddress,\n    clientAddress,\n    items,\n    total,\n    status: 'pending',\n  };\n\n  const addItem = () => {\n    const blankItem = {\n      id: uuidv4(),\n      name: '',\n      quantity: '',\n      price: '',\n      total: '',\n    };\n    return setItems([...items, blankItem]);\n  };\n\n  const modifyItem = (type, data, value) => {\n    const itemsCopy = [...items];\n    const index = itemsCopy.findIndex((r) => r.id === data.id);\n    const item = { ...itemsCopy[index] };\n    if (type === 'itemName') item.name = value;\n    if (type === 'qty' && value >= 0) {\n      item.quantity = value;\n      item.total = value * item.price;\n    }\n    if (type === 'price' && value >= 0) {\n      item.price = value;\n      item.total = value * item.quantity;\n    }\n    if (type === 'total') item.price = value;\n    itemsCopy[index] = item;\n    setItems(itemsCopy);\n  };\n\n  const deleteItem = (item) => setItems(items.filter((e) => e.id !== item));\n\n  return (\n    <FormContainer onSubmit={submitForm}>\n      <BackButtonContainer>\n        <BackButton clickHandler={() => closeCreatingInvoice()} />\n      </BackButtonContainer>\n\n      <h1>New Invoice</h1>\n      <FormPart>\n        <h3>Bill From</h3>\n        <FullSizeEntry numberPerLine=\"one\">\n          <Input\n            text=\"Street Address\"\n            data={senderAddress.street}\n            dataChangeHandler={(street) => setSenderAddress({ ...senderAddress, street })}\n          />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"three\">\n          <Input\n            text=\"City\"\n            data={senderAddress.city}\n            dataChangeHandler={(city) => setSenderAddress({ ...senderAddress, city })}\n          />\n          <Input\n            text=\"Post Code\"\n            data={senderAddress.postCode}\n            dataChangeHandler={(postCode) => setSenderAddress({ ...senderAddress, postCode })}\n          />\n          <Input\n            text=\"Country\"\n            data={senderAddress.country}\n            dataChangeHandler={(country) => setSenderAddress({ ...senderAddress, country })}\n          />\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <h3>Bill To</h3>\n        <FullSizeEntry numberPerLine=\"one\">\n          <Input\n            data={clientName}\n            dataChangeHandler={(name) => setClientName(name)}\n            text=\"Client's Name\"\n          />\n          <Input\n            data={clientEmail}\n            dataChangeHandler={(email) => setClientEmail}\n            text=\"Client's Email\"\n          />\n          <Input\n            data={clientAddress.street}\n            dataChangeHandler={(street) => setClientAddress({ ...clientAddress, street })}\n            text=\"Street Address\"\n          />\n        </FullSizeEntry>\n        <FullSizeEntry numberPerLine=\"three\">\n          <Input\n            data={clientAddress.city}\n            dataChangeHandler={(city) => setClientAddress({ ...clientAddress, city })}\n            text=\"City\"\n          />\n          <Input\n            data={clientAddress.postCode}\n            dataChangeHandler={(postCode) => setClientAddress({ ...clientAddress, postCode })}\n            text=\"Post Code\"\n          />\n          <Input\n            data={clientAddress.country}\n            dataChangeHandler={(country) => setClientAddress({ ...clientAddress, country })}\n            text=\"Country\"\n          />\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <FullSizeEntry numberPerLine={select === 'custom' ? 'three' : 'two'} date>\n          <InvoiceDateSelector\n            createdAt={createdAt}\n            invoiceDateHandler={(date) => setCreatedAt(date)}\n            handleSelectChange={(term) => setSelect(term)}\n            select={select}\n            paymentDue={paymentDue}\n            paymentDueHandler={(date) => setPaymentDue(date)}\n          />\n        </FullSizeEntry>\n      </FormPart>\n      <FormPart>\n        <h3>Item List</h3>\n        {items.length > 0 &&\n          items.map((e, i) => {\n            return (\n              <ItemList\n                key={e.id}\n                position={i}\n                data={e}\n                handleDelete={(item) => deleteItem(item)}\n                modifyItem={(type, data, value) => modifyItem(type, data, value)}\n              />\n            );\n          })}\n        <AddItemButton margin=\"20px\" clickHandler={() => addItem} />\n      </FormPart>\n      <ButtonContainer>\n        <SaveInvoiceButton\n          text=\"save changes\"\n          clickHandler={() => savingInvoice(invoiceFinalData)}\n        />\n      </ButtonContainer>\n    </FormContainer>\n  );\n};\n\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    items: PropTypes.shape([\n      {\n        name: PropTypes.string,\n        quantity: PropTypes.number,\n        price: PropTypes.number,\n        total: PropTypes.number,\n      },\n    ]),\n    total: PropTypes.number,\n  }).isRequired,\n  closeCreatingInvoice: PropTypes.func.isRequired,\n  savingInvoice: PropTypes.func.isRequired,\n};\n\nexport default InvoiceForm;\n\nconst FormContainer = styled.form`\n  label {\n    margin-bottom: 10px;\n  }\n  input,\n  select {\n    width: 100%;\n    height: 40px;\n    border: 1px solid #0c9880;\n    border-radius: 5px;\n    padding: 6px;\n  }\n  .label {\n    margin-bottom: 10px;\n  }\n`;\n\nconst BackButtonContainer = styled.div`\n  margin-bottom: 30px;\n`;\n\nconst FormPart = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  h3 {\n    font-size: 16px;\n  }\n`;\n\nconst FullSizeEntry = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: ${(props) => (props.numberPerLine === 'one' ? 'column' : 'row')};\n  width: 100%;\n  justify-content: space-between;\n  @media screen and (max-width: 600px) {\n    flex-direction: ${({ twoOnMobile }) => (twoOnMobile ? 'row' : 'row')};\n    flex-wrap: wrap;\n    margin-top: 0;\n  }\n\n  .container {\n    width: ${({ numberPerLine }) =>\n      (numberPerLine === 'three' && '30%') ||\n      (numberPerLine === 'two' && '45%') ||\n      (numberPerLine === 'one' && '100%')};\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n    @media screen and (max-width: 600px) {\n      width: ${({ date }) => (date ? '45%' : '100%')};\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n`;\n"]},"metadata":{},"sourceType":"module"}