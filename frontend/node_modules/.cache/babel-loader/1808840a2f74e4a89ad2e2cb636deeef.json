{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/NavBar/Auth.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveUser, setUserLogoutState, selectUserEmail, selectUserName } from 'reducers/userSlice';\nimport { auth, provider } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectUserEmail);\n\n  const handleSignIn = () => {\n    auth.signInWithPopup(provider);\n  };\n\n  const handleSignOut = () => {\n    auth.signOut().then(() => {\n      dispatch(setUserLogoutState());\n    }).catch(err => alert(err));\n  };\n\n  useEffect(() => {\n    if (userName === null) {\n      auth.onAuthStateChanged(user => {\n        if (user !== null && userEmail === null) {\n          console.log(user);\n          dispatch(setActiveUser({\n            userName: user.displayName,\n            userEmail: user.email\n          }));\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: userName ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignOut,\n      children: \"Sign out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSignIn,\n      children: \"Sign in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"9cS7s8EWj4l1coaboYN0KTRiql0=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/NavBar/Auth.jsx"],"names":["React","useEffect","useDispatch","useSelector","setActiveUser","setUserLogoutState","selectUserEmail","selectUserName","auth","provider","Auth","dispatch","userName","userEmail","handleSignIn","signInWithPopup","handleSignOut","signOut","then","catch","err","alert","onAuthStateChanged","user","console","log","displayName","email"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,aADF,EAEEC,kBAFF,EAGEC,eAHF,EAIEC,cAJF,QAKO,oBALP;AAMA,SAASC,IAAT,EAAeC,QAAf,QAA+B,gBAA/B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,QAAMU,QAAQ,GAAGT,WAAW,CAACI,cAAD,CAA5B;AACA,QAAMM,SAAS,GAAGV,WAAW,CAACG,eAAD,CAA7B;;AAEA,QAAMQ,YAAY,GAAG,MAAM;AACzBN,IAAAA,IAAI,CAACO,eAAL,CAAqBN,QAArB;AACD,GAFD;;AAGA,QAAMO,aAAa,GAAG,MAAM;AAC1BR,IAAAA,IAAI,CACDS,OADH,GAEGC,IAFH,CAEQ,MAAM;AACVP,MAAAA,QAAQ,CAACN,kBAAkB,EAAnB,CAAR;AACD,KAJH,EAKGc,KALH,CAKUC,GAAD,IAASC,KAAK,CAACD,GAAD,CALvB;AAMD,GAPD;;AASAnB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,QAAQ,KAAK,IAAjB,EAAuB;AACrBJ,MAAAA,IAAI,CAACc,kBAAL,CAAyBC,IAAD,IAAU;AAChC,YAAIA,IAAI,KAAK,IAAT,IAAiBV,SAAS,KAAK,IAAnC,EAAyC;AACvCW,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAZ,UAAAA,QAAQ,CACNP,aAAa,CAAC;AACZQ,YAAAA,QAAQ,EAAEW,IAAI,CAACG,WADH;AAEZb,YAAAA,SAAS,EAAEU,IAAI,CAACI;AAFJ,WAAD,CADP,CAAR;AAMD;AACF,OAVD;AAWD;AACF,GAdQ,CAAT;AAgBA,sBACE;AAAA,cACGf,QAAQ,gBACP;AAAQ,MAAA,OAAO,EAAEI,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,gBAGP;AAAQ,MAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA1CD;;GAAMJ,I;UACaR,W,EACAC,W,EACCA,W;;;KAHdO,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setActiveUser,\n  setUserLogoutState,\n  selectUserEmail,\n  selectUserName,\n} from 'reducers/userSlice';\nimport { auth, provider } from '../../firebase';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectUserEmail);\n\n  const handleSignIn = () => {\n    auth.signInWithPopup(provider);\n  };\n  const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        dispatch(setUserLogoutState());\n      })\n      .catch((err) => alert(err));\n  };\n\n  useEffect(() => {\n    if (userName === null) {\n      auth.onAuthStateChanged((user) => {\n        if (user !== null && userEmail === null) {\n          console.log(user);\n          dispatch(\n            setActiveUser({\n              userName: user.displayName,\n              userEmail: user.email,\n            })\n          );\n        }\n      });\n    }\n  });\n\n  return (\n    <div>\n      {userName ? (\n        <button onClick={handleSignOut}>Sign out</button>\n      ) : (\n        <button onClick={handleSignIn}>Sign in</button>\n      )}\n    </div>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}