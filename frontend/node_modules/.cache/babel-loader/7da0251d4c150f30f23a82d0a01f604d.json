{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/auth/Auth.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react/button-has-type */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setActiveUser, setUserLogoutState, selectUserEmail, selectUserName, selectUserImage } from 'reducers/userSlice';\nimport styled from 'styled-components';\nimport { auth, provider } from '../../firebase';\nimport AuthButton from './AuthButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectUserEmail);\n  const userImage = useSelector(selectUserImage);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleSignIn = () => {\n    auth.signInWithPopup(provider);\n  };\n\n  const handleSignOut = () => {\n    auth.signOut().then(() => {\n      dispatch(setUserLogoutState());\n    }).catch(err => alert(err));\n  };\n\n  useEffect(() => {\n    if (userName === null) {\n      setOpenMenu(false);\n      auth.onAuthStateChanged(user => {\n        if (user !== null) {\n          console.log(user);\n          dispatch(setActiveUser({\n            userName: user.displayName,\n            userEmail: user.email,\n            userId: user.uid,\n            userImage: user.photoURL\n          }));\n        }\n      });\n    }\n  });\n  const authContainer = useRef();\n\n  const handleClick = e => {\n    if (authContainer.current.contains(e.target)) {\n      return setOpenMenu(true);\n    }\n\n    return setOpenMenu(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContainer, {\n    ref: authContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), userName && /*#__PURE__*/_jsxDEV(AuthButton, {\n      userName: userName,\n      userEmail: userEmail,\n      signIn: handleSignIn,\n      signOut: handleSignOut\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"G0CrnCPxdKBhUY1vai4gkvI4qcY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\nconst AuthContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 900px) {\n    height: 80px;\n    width: 80px;\n    margin: 0 30px;\n  }\n`;\n_c2 = AuthContainer;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Auth\");\n$RefreshReg$(_c2, \"AuthContainer\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/auth/Auth.jsx"],"names":["React","useEffect","useState","useRef","useDispatch","useSelector","setActiveUser","setUserLogoutState","selectUserEmail","selectUserName","selectUserImage","styled","auth","provider","AuthButton","Auth","dispatch","userName","userEmail","userImage","openMenu","setOpenMenu","handleSignIn","signInWithPopup","handleSignOut","signOut","then","catch","err","alert","onAuthStateChanged","user","console","log","displayName","email","userId","uid","photoURL","authContainer","handleClick","e","current","contains","target","document","addEventListener","removeEventListener","AuthContainer","div"],"mappings":"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","sourcesContent":["/* eslint-disable react/button-has-type */\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  setActiveUser,\n  setUserLogoutState,\n  selectUserEmail,\n  selectUserName,\n  selectUserImage,\n} from 'reducers/userSlice';\nimport styled from 'styled-components';\nimport { auth, provider } from '../../firebase';\nimport AuthButton from './AuthButton';\n\nconst Auth = () => {\n  const dispatch = useDispatch();\n  const userName = useSelector(selectUserName);\n  const userEmail = useSelector(selectUserEmail);\n  const userImage = useSelector(selectUserImage);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  const handleSignIn = () => {\n    auth.signInWithPopup(provider);\n  };\n  const handleSignOut = () => {\n    auth\n      .signOut()\n      .then(() => {\n        dispatch(setUserLogoutState());\n      })\n      .catch((err) => alert(err));\n  };\n\n  useEffect(() => {\n    if (userName === null) {\n      setOpenMenu(false);\n      auth.onAuthStateChanged((user) => {\n        if (user !== null) {\n          console.log(user);\n          dispatch(\n            setActiveUser({\n              userName: user.displayName,\n              userEmail: user.email,\n              userId: user.uid,\n              userImage: user.photoURL,\n            })\n          );\n        }\n      });\n    }\n  });\n\n  const authContainer = useRef();\n\n  const handleClick = (e) => {\n    if (authContainer.current.contains(e.target)) {\n      return setOpenMenu(true);\n    }\n    return setOpenMenu(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n\n  return (\n    <AuthContainer ref={authContainer}>\n      <div></div>\n      {userName && (\n        <AuthButton\n          userName={userName}\n          userEmail={userEmail}\n          signIn={handleSignIn}\n          signOut={handleSignOut}\n        />\n      )}\n    </AuthContainer>\n  );\n};\n\nexport default Auth;\n\nconst AuthContainer = styled.div`\n  width: 100%;\n  height: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media screen and (max-width: 900px) {\n    height: 80px;\n    width: 80px;\n    margin: 0 30px;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}