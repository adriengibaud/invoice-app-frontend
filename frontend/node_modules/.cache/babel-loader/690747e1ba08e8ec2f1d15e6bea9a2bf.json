{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/ItemList.jsx\";\n\n/* eslint-disable  */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemList = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(ItemEntry, {\n    children: /*#__PURE__*/_jsxDEV(ItemData, {\n      label: label,\n      dataType: dataType,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ItemList;\nItemList.propTypes = {\n  dataType: PropTypes.string.isRequired,\n  label: PropTypes.bool,\n  data: (PropTypes.oneOfTypes = [PropTypes.string.isRequired, PropTypes.number.isRequired]).isRequired\n};\nItemList.defaultProps = {\n  label: false\n};\nexport default ItemList;\nconst ItemEntry = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  margin-top: 20px;\n`;\n_c2 = ItemEntry;\nconst ItemData = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({\n  dataType\n}) => dataType === 'itemName' && 'flex-start' || dataType === 'qty' && 'center' || dataType === 'price' && 'flex-start' || dataType === 'total' && 'flex-end'};\n  width: ${({\n  label,\n  dataType\n}) => dataType === 'itemName' && '35%' || dataType === 'qty' && '10%' || dataType === 'price' && '17%' || dataType === 'total' && '17%' || dataType === 'bin' && '5%'};\n  img {\n    width: 80%;\n  }\n`;\n_c3 = ItemData;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ItemList\");\n$RefreshReg$(_c2, \"ItemEntry\");\n$RefreshReg$(_c3, \"ItemData\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/invoiceForm/ItemList.jsx"],"names":["React","PropTypes","styled","ItemList","data","label","dataType","propTypes","string","isRequired","bool","oneOfTypes","number","defaultProps","ItemEntry","div","ItemData"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAwB,MAAA,QAAQ,EAAEC,QAAlC;AAAA,6BACE;AAAO,QAAA,KAAK,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;KAAMD,Q;AAUNA,QAAQ,CAACI,SAAT,GAAqB;AACnBD,EAAAA,QAAQ,EAAEL,SAAS,CAACO,MAAV,CAAiBC,UADR;AAEnBJ,EAAAA,KAAK,EAAEJ,SAAS,CAACS,IAFE;AAGnBN,EAAAA,IAAI,EAAE,CAACH,SAAS,CAACU,UAAV,GAAuB,CAACV,SAAS,CAACO,MAAV,CAAiBC,UAAlB,EAA8BR,SAAS,CAACW,MAAV,CAAiBH,UAA/C,CAAxB,EACHA;AAJgB,CAArB;AAOAN,QAAQ,CAACU,YAAT,GAAwB;AACtBR,EAAAA,KAAK,EAAE;AADe,CAAxB;AAIA,eAAeF,QAAf;AAEA,MAAMW,SAAS,GAAGZ,MAAM,CAACa,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMD,S;AASN,MAAME,QAAQ,GAAGd,MAAM,CAACa,GAAI;AAC5B;AACA;AACA,qBAAqB,CAAC;AAAET,EAAAA;AAAF,CAAD,KAChBA,QAAQ,KAAK,UAAb,IAA2B,YAA5B,IACCA,QAAQ,KAAK,KAAb,IAAsB,QADvB,IAECA,QAAQ,KAAK,OAAb,IAAwB,YAFzB,IAGCA,QAAQ,KAAK,OAAb,IAAwB,UAAY;AACzC,WAAW,CAAC;AAAED,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACNA,QAAQ,KAAK,UAAb,IAA2B,KAA5B,IACCA,QAAQ,KAAK,KAAb,IAAsB,KADvB,IAECA,QAAQ,KAAK,OAAb,IAAwB,KAFzB,IAGCA,QAAQ,KAAK,OAAb,IAAwB,KAHzB,IAICA,QAAQ,KAAK,KAAb,IAAsB,IAAM;AACjC;AACA;AACA;AACA,CAjBA;MAAMU,Q","sourcesContent":["/* eslint-disable  */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst ItemList = ({ data }) => {\n  return (\n    <ItemEntry>\n      <ItemData label={label} dataType={dataType}>\n        <input value={data} />\n      </ItemData>\n    </ItemEntry>\n  );\n};\n\nItemList.propTypes = {\n  dataType: PropTypes.string.isRequired,\n  label: PropTypes.bool,\n  data: (PropTypes.oneOfTypes = [PropTypes.string.isRequired, PropTypes.number.isRequired])\n    .isRequired,\n};\n\nItemList.defaultProps = {\n  label: false,\n};\n\nexport default ItemList;\n\nconst ItemEntry = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nconst ItemData = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${({ dataType }) =>\n    (dataType === 'itemName' && 'flex-start') ||\n    (dataType === 'qty' && 'center') ||\n    (dataType === 'price' && 'flex-start') ||\n    (dataType === 'total' && 'flex-end')};\n  width: ${({ label, dataType }) =>\n    (dataType === 'itemName' && '35%') ||\n    (dataType === 'qty' && '10%') ||\n    (dataType === 'price' && '17%') ||\n    (dataType === 'total' && '17%') ||\n    (dataType === 'bin' && '5%')};\n  img {\n    width: 80%;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}