{"ast":null,"code":"var _jsxFileName = \"/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/Invoice/InvoiceForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-unused-vars */\n\n/* eslint-disable arrow-body-style */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InvoiceForm = ({\n  invoiceData\n}) => {\n  _s();\n\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: createdAt\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n};\n\n_s(InvoiceForm, \"fJw0QWtQ7jMD3Z/wR4PMhqKPxGc=\");\n\n_c = InvoiceForm;\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string\n    })\n  }).isRequired\n};\nexport default InvoiceForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InvoiceForm\");","map":{"version":3,"sources":["/Users/ichbinrodolf/projects/invoices-app/invoice-app-frontend/src/components/Invoice/InvoiceForm.jsx"],"names":["React","useState","PropTypes","InvoiceForm","invoiceData","id","setId","description","setDescription","createdAt","setCreatedAt","propTypes","shape","string","isRequired","paymentDue","clientName","clientEmail","clientAddress","street","city","postCode","country","senderAddress"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AAAA;;AACvC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcL,QAAQ,CAACG,WAAW,CAACC,EAAb,CAA5B;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAACG,WAAW,CAACG,WAAb,CAA9C;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAACG,WAAW,CAACK,SAAb,CAA1C;AAEA,sBAAO;AAAA,cAAMA;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAND;;GAAMN,W;;KAAAA,W;AAQNA,WAAW,CAACQ,SAAZ,GAAwB;AACtBP,EAAAA,WAAW,EAAEF,SAAS,CAACU,KAAV,CAAgB;AAC3BP,IAAAA,EAAE,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADM;AAE3BP,IAAAA,WAAW,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFH;AAG3BL,IAAAA,SAAS,EAAEP,SAAS,CAACW,MAAV,CAAiBC,UAHD;AAI3BC,IAAAA,UAAU,EAAEb,SAAS,CAACW,MAAV,CAAiBC,UAJF;AAK3BE,IAAAA,UAAU,EAAEd,SAAS,CAACW,MAAV,CAAiBC,UALF;AAM3BG,IAAAA,WAAW,EAAEf,SAAS,CAACW,MANI;AAO3BK,IAAAA,aAAa,EAAEhB,SAAS,CAACU,KAAV,CAAgB;AAC7BO,MAAAA,MAAM,EAAEjB,SAAS,CAACW,MADW;AAE7BO,MAAAA,IAAI,EAAElB,SAAS,CAACW,MAFa;AAG7BQ,MAAAA,QAAQ,EAAEnB,SAAS,CAACW,MAHS;AAI7BS,MAAAA,OAAO,EAAEpB,SAAS,CAACW;AAJU,KAAhB,CAPY;AAa3BU,IAAAA,aAAa,EAAErB,SAAS,CAACU,KAAV,CAAgB;AAC7BO,MAAAA,MAAM,EAAEjB,SAAS,CAACW,MADW;AAE7BO,MAAAA,IAAI,EAAElB,SAAS,CAACW,MAFa;AAG7BQ,MAAAA,QAAQ,EAAEnB,SAAS,CAACW,MAHS;AAI7BS,MAAAA,OAAO,EAAEpB,SAAS,CAACW;AAJU,KAAhB;AAbY,GAAhB,EAmBVC;AApBmB,CAAxB;AAuBA,eAAeX,WAAf","sourcesContent":["/* eslint-disable no-unused-vars */\n/* eslint-disable arrow-body-style */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst InvoiceForm = ({ invoiceData }) => {\n  const [id, setId] = useState(invoiceData.id);\n  const [description, setDescription] = useState(invoiceData.description);\n  const [createdAt, setCreatedAt] = useState(invoiceData.createdAt);\n\n  return <div>{createdAt}</div>;\n};\n\nInvoiceForm.propTypes = {\n  invoiceData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    createdAt: PropTypes.string.isRequired,\n    paymentDue: PropTypes.string.isRequired,\n    clientName: PropTypes.string.isRequired,\n    clientEmail: PropTypes.string,\n    clientAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n    senderAddress: PropTypes.shape({\n      street: PropTypes.string,\n      city: PropTypes.string,\n      postCode: PropTypes.string,\n      country: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default InvoiceForm;\n"]},"metadata":{},"sourceType":"module"}